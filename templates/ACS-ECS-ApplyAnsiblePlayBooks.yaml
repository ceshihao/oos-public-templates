FormatVersion: OOS-2019-06-01
Description:
  en: 'Use this template to run Ansible playbook on ECS Instance.Only supports CentOS, AliyunLinux and Ubuntu.'
  zh-cn: 使用这个模板执行ECS实例中的Ansible PlayBook，仅支持CentOS，AliyunLinux和Ubuntu
  name-en: ACS-ECS-ApplyAnsiblePlayBooks
  name-zh-cn: 在实例中执行Ansible PlayBook
  categories:
    - run_command
Parameters:
  regionId:
    Type: String
    Description:
      name-en: The id of region.
      name-zh-cn: 地域ID。
    AssociationProperty: RegionId
    Default: '{{ ACS::RegionId }}'
  targets:
    Type: Json
    AssociationProperty: Targets
    AssociationPropertyMetadata:
      ResourceType: 'ALIYUN::ECS::Instance'
      RegionId: regionId
  sourceType:
    Type: String
    Description:
      name-en: The type of playbook storage.
      name-zh-cn: playbook存储的类型。
    AllowedValues:
      - oss
      - https
      - github
  sourcePath:
    Type: String
    Description:
      name-en: 'You must specify a URL where the playbook is stored'
      name-zh-cn: '您必须指定用于存储playbook的URL'
      en: 'You can specify the URL in the following formats: https://example.com/playbook.yml'
      zh-cn: '可以按以下格式指定URL：https://example.com/playbook.yml'
  playbookFile:
    Description:
      name-en: 'The name of playbook to apply. For example: example.yml'
      name-zh-cn: '执行的playbook名称。例如: example.yml'
    Type: String
  tokenInfo:
    Type: String
    Description:
      name-en: Specify a token to download ansible playbook.It is only required when downloading palybook from GitHub.
      name-zh-cn: 指定令牌以下载playbook，只有从GitHub上下载palybook时需要填。
    Default: ""
  hosts:
    Type: String
    Description:
      name-en: The hosts used to execute  palybook.
      name-zh-cn: 用于执行palybook的hosts。
    Default: /etc/ansible/hosts
  installDependencies:
    Description:
      name-en: 'OOS installs Ansible and its dependencies'
      name-zh-cn: OOS从PyPI存储库中是否安装Ansible及其依赖项
      en: 'If set to True,  OOS installs Ansible and its dependencies, including Python, from the PyPI repo.  If set to False, then verify that Ansible and its dependencies are installed on the target instances.'
      zh-cn: 如果设置为True，则OOS从PyPI存储库中安装Ansible及其依赖项，包括Python。如果设置为False，则需要验证目标实例上是否安装了Ansible及其依赖项。
    Type: Boolean
    Default: true
  workingDir:
    Description:
      name-en: The directory to apply playbook.
      name-zh-cn: 执行playbook的目录。
    Type: String
    Default: /root/ansible-workspace
  check:
    Description:
      name-en: Use the check parameter to perform a dry run of the Ansible execution.
      name-zh-cn: 使用check参数运行Ansible执行检查。
    Type: Boolean
    Default: true
  extraVariables:
    Type: String
    Description:
      name-en: Additional variables to pass to Ansible at runtime
      name-zh-cn: 其他变量在运行时传递给Ansible
      en: 'Enter a space separated list of key/value pairs. For example: color=red flavor=lime'
      zh-cn: 输入以空格分隔的键/值对列表。 例如：color=red flavour=lime
    Default: color=red
    AllowedPattern: ^$|^\w+\=\S+(\s\w+\=\S+)*$
  verbose:
    Type: String
    Description:
      en: Set the verbosity level for logging Playbook executions
      zh-cn: 设置用于记录Playbook执行情况的详细程度
      name-en: 'Specify -v for low verbosity, -vv or –vvv for medium verbosity, and -vvvv for debug level.'
      name-zh-cn: 指定-v表示低级别，-vv或–vvv表示中等级别，-vvvv表示调试级别。
    AllowedValues:
      - '-v'
      - '-vv'
      - '-vvv'
      - '-vvvv'
    Default: '-v'
  rateControl:
    Description:
      name-en: Concurrency ratio of task execution.
      name-zh-cn: 任务执行的并发比率。
    Type: Json
    AssociationProperty: RateControl
    Default:
      Mode: Concurrency
      MaxErrors: 0
      Concurrency: 10
  OOSAssumeRole:
    Description: The RAM role to be assumed by OOS.
    Type: String
    Default: OOSServiceRole
RamRole: '{{ OOSAssumeRole }}'
Tasks:
  - Name: getInstance
    Description:
      name-en: Views the ECS instances.
      name-zh-cn: 获取ECS实例。
    Action: 'ACS::SelectTargets'
    Properties:
      ResourceType: 'ALIYUN::ECS::Instance'
      RegionId: '{{ regionId }}'
      Filters:
        - '{{ targets }}'
    Outputs:
      instanceIds:
        Type: List
        ValueSelector: 'Instances.Instance[].InstanceId'
  - Name: applyPlaybook
    Action: 'ACS::ECS::ApplyAnsiblePlayBook'
    Description:
      name-en: Apply the specified playbook.
      name-zh-cn: 运行指定的playbook。
    Properties:
      regionId: '{{ regionId }}'
      instanceId: '{{ ACS::TaskLoopItem }}'
      sourceType: '{{ sourceType }}'
      sourcePath: '{{ sourcePath }}'
      playbookFile: '{{ playbookFile }}'
      tokenInfo: '{{ tokenInfo }}'
      hosts: '{{ hosts }}'
      installDependencies: '{{ installDependencies }}'
      workingDir: '{{ workingDir }}'
      check: '{{ check }}'
      extraVariables: '{{ extraVariables }}'
      verbose: '{{ verbose }}'
    Loop:
      Items: '{{ getInstance.instanceIds }}'
      RateControl: '{{ rateControl }}'
      Outputs:
        commandOutputs:
          AggregateType: 'Fn::ListJoin'
          AggregateField: commandOutput
    Outputs:
      commandOutput:
        Type: String
        ValueSelector: commandOutput
Outputs:
  commandOutput:
    Type: String
    Value: '{{ applyPlaybook.commandOutputs }}'

