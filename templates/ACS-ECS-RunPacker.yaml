FormatVersion: OOS-2019-06-01
Description:
  en: Run packer template.
  zh-cn: 执行Packer模板。
  name-en: ACS-ECS-RunPacker
  name-zh-cn: 执行Packer模板
  categories:
    - image_manage
Parameters:
  regionId:
    Description:
      en: The id of region.
      zh-cn: 地域ID。
    Type: String
    AssociationProperty: RegionId
    Default: '{{ ACS::RegionId }}'
  targets:
    Type: String
    AssociationProperty: Targets
    AssociationPropertyMetadata:
      ResourceType: 'ALIYUN::ECS::Instance'
      RegionId: regionId
  sourceType:
    Type: String
    Description:
      en: The type of file storage.
      zh-cn: 文件存储的类型。
    AllowedValues:
      - oss
      - https
      - github
  sourcePath:
    Type: String
    Description:
      en: You must specify a URL where the file is stored.
      zh-cn: 您必须指定用于存储文件的URL。
  tokenInfo:
    Type: String
    Description:
      en: Specify a token to download file.It is only required when downloading file from GitHub.
      zh-cn: 指定令牌以下载文件，只有从GitHub上下载文件时需要填。
    Default: ' '
  templateFile:
    Description:
      en: 'The name of packer template to run. For example: example.json'
      zh-cn: 将要执行的packer模板的名称。
    Type: String
  mode:
    Type: String
    Description:
      en: The mode in which to use Packer when validating against the template.
      zh-cn: 使用模板的方式。
    AllowedValues:
      - validate
      - fix
      - build
    Default: build
  OOSAssumeRole:
    Description: The RAM role to be assumed by OOS.
    Type: String
    Default: OOSServiceRole
RamRole: '{{ OOSAssumeRole }}'
Tasks:
  - Name: getInstance
    Description:
      en: Views the ECS instances.
      zh-cn: 获取ECS实例。
    Action: ACS::SelectTargets
    Properties:
      ResourceType: ALIYUN::ECS::Instance
      RegionId: '{{ regionId }}'
      Filters:
        - '{{ targets }}'
    Outputs:
      instanceId:
        Type: String
        ValueSelector: Instances.Instance[].InstanceId
  - Name: runPacker
    Action: 'ACS::ECS::RunPacker'
    Description:
      en: Run packer template.
      zh-cn: 运行packer模板。
    Properties:
      regionId: '{{ regionId }}'
      instanceId: '{{ getInstance.instanceId }}'
      sourceType: '{{ sourceType }}'
      sourcePath: '{{ sourcePath }}'
      tokenInfo: '{{ tokenInfo }}'
      templateFile: '{{ templateFile }}'
      mode: '{{ mode }}'
    Outputs:
      commandOutput:
        Type: String
        ValueSelector: commandOutput
Outputs:
  result:
    Type: String
    Value: '{{ runPacker.commandOutput }}'

