FormatVersion: OOS-2019-06-01
Description:
  en: Build and deploy applications on a single ECS
  zh-cn: 在单个ECS上构建并部署应用
  name-en: ACS-ECS-LocalBuildAndDeployOnSingleECS
  name-zh-cn: 单ECS本地构建部署
Parameters:
  platform:
    Type: String
    Label:
      en: Platform
      zh-cn: 平台
    AssociationProperty: ALIYUN::OOS::GitPlatform::Name
    Default: github
    Description:
      en: ECS in mainland China may experience unstable GitHub connection. It is recommended to use Gitee first.
      zh-cn: 中国内地ECS可能会出现GitHub连接不稳定，建议优先使用Gitee。
    AllowedValues:
      - github
      - gitee
  owner:
    Type: String
    Label:
      en: Owner
      zh-cn: 所有者
    AssociationProperty: ALIYUN::OOS::GitAccount::Name
    AssociationPropertyMetadata:
      Platform: ${platform}
  organization:
    Type: String
    Label:
      en: Organization
      zh-cn: 组织
    Default: ''
    AssociationProperty: ALIYUN::OOS::GitOrganization::Name
    AssociationPropertyMetadata:
      Platform: ${platform}
      Owner: ${owner}
  repository:
    Type: String
    Label:
      en: Repository
      zh-cn: 仓库
    AssociationProperty: ALIYUN::OOS::GitRepository::Name
    AssociationPropertyMetadata:
      Platform: ${platform}
      Organization: ${organization}
      Owner: ${owner}
  instanceId:
    Label:
      en: InstanceId
      zh-cn: ECS实例ID
    Description:
      en: The ID of ECS instance
      zh-cn: ECS实例ID
    Type: String
    Default: ''
    AssociationPropertyMetadata:
      Visible:
        Condition:
          Fn::Equals:
            - ${platform}
            - Null
  branch:
    Label:
      en: Branch
      zh-cn: 分支
    Description:
      en: Branch, pull default branch if not set
      zh-cn: 代码仓库分支，不填拉取默认分支
    Type: String
    Default: ''
  downloadPath:
    Label:
      en: Download Path
      zh-cn: 下载路径
    Description:
      en: The path to download the code. If not set, it will be downloaded to /root/workspace/{current execution ID}. If you need to specify a path, please ensure that the path you provide does not have files, otherwise it will fail to pull.
      zh-cn: 将代码下载到您的ECS上的路径。【不填默认下载到/root/workspace/{当前执行的ID}。如您需指定路径，请确保您提供的路径下没有文件，否则会拉取失败。】
    Type: String
    Default: ''
  isDockerBuild:
    Label:
      en: IsDockerBuild
      zh-cn: 是否使用Docker构建
    Description:
      en: If yes, it will detect if Docker is already installed on your ECS, and if not, it will be installed automatically for you.
      zh-cn: 如果选择是，会检测您的ECS上是否已安装Docker，如果没有会为您自动安装。
    Type: Boolean
    Default: false
  buildAndDeployScript:
    Label:
      en: buildAndDeployScript
      zh-cn: 构建部署脚本
    Description:
      en: Script execution takes the root directory of the code as its working directory.
      zh-cn: 脚本执行会以您指定的下载路径作为工作路径。
    Type: String
    MaxLength: 16384
    AssociationProperty: ALIYUN::OOS::Command::CommandContent
    AssociationPropertyMetadata:
      CommandType: RunShellScript
      Value:
        - Condition:
            Fn::Equals:
              - ${isDockerBuild}
              - true
          Value: |-
            ##### 请注意不要在这里填写Dockerfile内容，这里应该填写用于构建部署的shell命令，可参考下面的示例。
            ##### Please do not fill in the Dockerfile content here, but fill in the build command, refer to the example below.

            ### Build latest image
            # docker build -f Dockerfile -t myapp:latest .
            # container_name="my-container"

            ### Stop the previous version of the container (if any)
            # container_id=$(docker ps -aq -f name=${container_name}) 
            # if [ -n "$container_id" ]; then
            #   docker stop $container_id
            #   docker rm $container_id
            # fi

            ### Start the current version of the container
            # docker run -d -p 8080:8080 --name ${container_name} myapp:latest

            ##### end
        - Condition:
            Fn::Equals:
              - ${isDockerBuild}
              - false
          Value: |-
            ##### Sample Java Deploy Script 
            ##### for ECS on Alibaba Cloud Linux 3.2104
            
            ### Build jar file.
            # set -e
            # yum install -y maven-3.5.4
            # mvn package
            
            ### Stop the previous version of the application (if any) and deploy the current version.
            # PID=$(ps -ef | grep "sample-spring-1.0-SNAPSHOT.jar" | grep -v "grep" | awk '{print $2}')
            # if [ -n "$PID" ]; then
            #   kill -9 $PID
            # fi
            # java -jar target/sample-spring-1.0-SNAPSHOT.jar &
            
            ##### end
RamRole: ''
Tasks:
  - Name: GitCodeRepo
    Action: ACS::CICD::GitCodeRepo
    Description: 指定代码源，生成临时授权链接
    Properties:
      organization: '{{ organization }}'
      platform: '{{ platform }}'
      owner: '{{ owner }}'
      repository: '{{ repository }}'
    Outputs:
      authorizedUrl:
        Type: String
        ValueSelector: authorizedUrl
  - Name: LocalBuildAndDeploy
    Action: ACS::CICD::LocalBuildAndDeploy
    Description: 拉取代码，构建并部署应用
    Properties:
      instanceId: '{{ instanceId }}'
      codeSource: git
      isDockerBuild: '{{ isDockerBuild }}'
      codeSourceUrl: '{{ GitCodeRepo.authorizedUrl }}'
      branch: '{{ branch }}'
      buildAndDeployScript: '{{ buildAndDeployScript }}'
      regionId: '{{ ACS::RegionId }}'
      workingDir:
        Fn::If:
          - Fn::Equals:
            - '{{ downloadPath }}'
            - ''
          - '/root/workspace/{{ACS::ExecutionId}}'
          - '{{ downloadPath }}'
    Outputs:
      downloadCodeFromOssCommandOutput:
        Type: String
        ValueSelector: downloadCodeFromOssOutput
      downloadCodeFromGitCommandOutput:
        Type: String
        ValueSelector: downloadCodeFromGitOutput
      installDockerCommandOutput:
        Type: String
        ValueSelector: installDockerOutput
      buildAndDeployCommandOutput:
        Type: String
        ValueSelector: buildAndDeployOutput
Metadata:
  ALIYUN::OOS::Interface:
    ParameterGroups:
      - Parameters:
          - platform
          - owner
          - organization
          - repository
          - branch
          - downloadPath
        Label:
          default:
            zh-cn: 代码源配置
            en: Code Source Configuration
      - Parameters:
          - isDockerBuild
          - buildAndDeployScript
        Label:
          default:
            zh-cn: 构建部署配置
            en: Build and Deploy Configuration
