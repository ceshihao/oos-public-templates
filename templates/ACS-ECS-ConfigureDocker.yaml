FormatVersion: OOS-2019-06-01
Description:
  en: Use this template to install or unistall docker on ecs
  zh-cn: '使用这个模板批量的在ECS安装或卸载docker'
  name-en: ACS-ECS-ConfigureDocker
  name-zh-cn: 批量安装或卸载Docker
  categories:
    - run_command
Parameters:
  regionId:
    Type: String
    Description:
      en: The id of region.
      zh-cn: 地域ID。
    AssociationProperty: RegionId
    Default: '{{ ACS::RegionId }}'
  action:
    Type: String
    Default: install
    AllowedValues:
       - install
       - uninstall
  targets:
    Type: Json
    AssociationProperty: Targets
    AssociationPropertyMetadata:
      ResourceType: 'ALIYUN::ECS::Instance'
      RegionId: regionId
  rateControl:
    Description:
      en: Concurrency ratio of task execution.
      zh-cn: 任务执行的并发比率。
    Type: Json
    AssociationProperty: RateControl
    Default:
      Mode: Concurrency
      MaxErrors: 0
      Concurrency: 10
  OOSAssumeRole:
    Description: The RAM role to be assumed by OOS.
    Type: String
    Default: OOSServiceRole
RamRole: '{{ OOSAssumeRole }}'
Tasks:
  - Name: getInstance
    Description:
      en: Views the ECS instances.
      zh-cn: 获取ECS实例。
    Action: 'ACS::SelectTargets'
    Properties:
      ResourceType: 'ALIYUN::ECS::Instance'
      RegionId: '{{ regionId }}'
      Filters:
        - '{{ targets }}'
    Outputs:
      instanceIds:
        Type: List
        ValueSelector: 'Instances.Instance[].InstanceId'
  - Name: runCommand
    Action: 'ACS::ECS::RunCommand'
    Properties:
      commandContent: |-
        #!/bin/bash
        yum --help > /dev/null  2>&1
        if [ $? -eq 0 ]; then
            if [ "{{action}}" = "install" ]; then
                yum install -y docker
                if [ $? -ne 0 ]; then
                    echo "Docker is install failed. Please check your command" >&2;
                    exit 1;
                fi
                exit 0;
            elif [ "{{action}}" = "uninstall" ]; then
                yum remove -y docker
                if [ $? -ne 0 ]; then
                    echo "Docker uninstall failed. Please check your command" >&2;
                    exit 1;
                fi
                exit 0;
            else
                echo "Docker command must be install or uninstall" >& 2
                exit 1;
            fi
        fi
        apt-get --help > /dev/null 2>&1
        if [ $? -eq 0 ]; then
            if [ "{{action}}" = "install" ]; then
                apt-get -y update  && apt-get -y install docker.io
                if [ $? -ne 0 ]; then
                    echo "Docker is install failed. Please check your command" >&2;
                    exit 1;
                fi
                exit 0;
            elif [ "{{action}}" = "uninstall" ]; then
                apt-get -y remove docker.io
                if [ $? -ne 0 ]; then
                    echo "Docker uninstall failed. Please check your command" >&2;
                    exit 1;
                fi
                exit 0;
            else
                echo "Docker command must be install or uninstall" >& 2
                exit 1;
            fi
        fi
        echo "Unknown pakcage installer. Only support yum/apt-get" >&2;
        exit 1;
      instanceId: '{{ ACS::TaskLoopItem }}'
      commandType: RunShellScript
    Loop:
      Items: '{{ getInstance.instanceIds }}'
      RateControl: '{{ rateControl }}'
      Outputs:
        commandOutputs:
          AggregateType: 'Fn::ListJoin'
          AggregateField: commandOutput
    Outputs:
      commandOutput:
        Type: String
        ValueSelector: invocationOutput
Outputs:
  commandOutput:
    Type: String
    Value: '{{ runCommand.commandOutputs }}'


